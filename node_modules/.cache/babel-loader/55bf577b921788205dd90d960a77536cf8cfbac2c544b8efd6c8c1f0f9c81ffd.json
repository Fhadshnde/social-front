{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blog-pro\\\\frontend\\\\src\\\\pages\\\\post-page\\\\Post-Page.jsx\",\n  _s = $RefreshSig$();\nimport \"./posts-page.css\";\nimport PostList from \"../../components/posts/PostList\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Pagination from \"../../components/pagination/Pagination\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, getPostsCount } from \"../../redux/apiCalls/postApiCall\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst POST_PER_PAGE = 3;\nconst PostsPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    postsCount,\n    posts\n  } = useSelector(state => state.post);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pages = Math.ceil(postsCount / POST_PER_PAGE);\n  useEffect(() => {\n    dispatch(fetchPosts(currentPage));\n    window.scrollTo(0, 0);\n  }, [currentPage, dispatch]);\n  useEffect(() => {\n    dispatch(getPostsCount());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"posts-page\",\n      children: [/*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pages: pages,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PostsPage, \"Tu6xaYK2EWxrC4uEm/b+EDPGjO4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["PostList","Sidebar","Pagination","useEffect","useState","useDispatch","useSelector","fetchPosts","getPostsCount","jsxDEV","_jsxDEV","Fragment","_Fragment","POST_PER_PAGE","PostsPage","_s","dispatch","postsCount","posts","state","post","currentPage","setCurrentPage","pages","Math","ceil","window","scrollTo","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Blog-pro/frontend/src/pages/post-page/Post-Page.jsx"],"sourcesContent":["import \"./posts-page.css\";\r\nimport PostList from \"../../components/posts/PostList\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Pagination from \"../../components/pagination/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts, getPostsCount } from \"../../redux/apiCalls/postApiCall\";\r\n\r\nconst POST_PER_PAGE = 3;\r\n\r\nconst PostsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { postsCount, posts } = useSelector(state => state.post);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pages = Math.ceil(postsCount / POST_PER_PAGE);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts(currentPage));\r\n    window.scrollTo(0, 0);\r\n  }, [currentPage, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsCount());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"posts-page\">\r\n        <PostList posts={posts} />\r\n        <Sidebar />\r\n      </section>\r\n      <Pagination\r\n        pages={pages}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,OAAOA,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,aAAa,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7E,MAAMC,aAAa,GAAG,CAAC;AAEvB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,UAAU;IAAEC;EAAM,CAAC,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAE9D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMmB,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACR,UAAU,GAAGJ,aAAa,CAAC;EAEnDV,SAAS,CAAC,MAAM;IACda,QAAQ,CAACT,UAAU,CAACc,WAAW,CAAC,CAAC;IACjCK,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC,EAAE,CAACN,WAAW,EAAEL,QAAQ,CAAC,CAAC;EAE3Bb,SAAS,CAAC,MAAM;IACda,QAAQ,CAACR,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAASmB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAC7BlB,OAAA,CAACV,QAAQ;QAACkB,KAAK,EAAEA;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1BvB,OAAA,CAACT,OAAO;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACVvB,OAAA,CAACR,UAAU;MACTqB,KAAK,EAAEA,KAAM;MACbF,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAClB,EAAA,CA7BID,SAAS;EAAA,QACIT,WAAW,EACEC,WAAW;AAAA;AAAA4B,EAAA,GAFrCpB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
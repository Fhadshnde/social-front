{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blog-pro\\\\frontend\\\\src\\\\pages\\\\category\\\\Category.jsx\",\n  _s = $RefreshSig$();\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./category.css\";\nimport PostList from \"../../components/posts/PostList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPostsBasedOnCategory } from \"../../redux/apiCalls/postApiCall\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    postsCate\n  } = useSelector(state => state.post);\n  const {\n    category\n  } = useParams();\n  useEffect(() => {\n    dispatch(fetchPostsBasedOnCategory(category));\n    window.scrollTo(0, 0);\n  }, [dispatch, category]); // تم إضافة dispatch إلى مصفوفة الاعتماديات\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"category\",\n    children: postsCate.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"category-not-found\",\n        children: [\"Posts with \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this), \" category not found\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/posts\",\n        className: \"category-not-found-link\",\n        children: \"Go to posts page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"category-title\",\n        children: [\"Posts based on \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: postsCate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"SXxUXfDHXepMuYz/KliwlFtRLOU=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["useParams","Link","PostList","useEffect","useDispatch","useSelector","fetchPostsBasedOnCategory","jsxDEV","_jsxDEV","Fragment","_Fragment","Category","_s","dispatch","postsCate","state","post","category","window","scrollTo","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","to","posts","_c","$RefreshReg$"],"sources":["D:/Blog-pro/frontend/src/pages/category/Category.jsx"],"sourcesContent":["import { useParams, Link } from \"react-router-dom\";\r\nimport \"./category.css\";\r\nimport PostList from \"../../components/posts/PostList\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPostsBasedOnCategory } from \"../../redux/apiCalls/postApiCall\";\r\n\r\nconst Category = () => {\r\n  const dispatch = useDispatch();\r\n  const { postsCate } = useSelector((state) => state.post);\r\n\r\n  const { category } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPostsBasedOnCategory(category));\r\n    window.scrollTo(0, 0);\r\n  }, [dispatch, category]); // تم إضافة dispatch إلى مصفوفة الاعتماديات\r\n\r\n  return (\r\n    <section className=\"category\">\r\n      {postsCate.length === 0 ? (\r\n        <>\r\n          <h1 className=\"category-not-found\">\r\n            Posts with <span>{category}</span> category not found\r\n          </h1>\r\n          <Link to=\"/posts\" className=\"category-not-found-link\">\r\n            Go to posts page\r\n          </Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"category-title\">Posts based on {category}</h1>\r\n          <PostList posts={postsCate} />\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,yBAAyB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7E,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAU,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAExD,MAAM;IAAEC;EAAS,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAEhCG,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACP,yBAAyB,CAACW,QAAQ,CAAC,CAAC;IAC7CC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC,EAAE,CAACN,QAAQ,EAAEI,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1B,oBACET,OAAA;IAASY,SAAS,EAAC,UAAU;IAAAC,QAAA,EAC1BP,SAAS,CAACQ,MAAM,KAAK,CAAC,gBACrBd,OAAA,CAAAE,SAAA;MAAAW,QAAA,gBACEb,OAAA;QAAIY,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,aACtB,eAAAb,OAAA;UAAAa,QAAA,EAAOJ;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,uBACpC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLlB,OAAA,CAACP,IAAI;QAAC0B,EAAE,EAAC,QAAQ;QAACP,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAEtD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eACP,CAAC,gBAEHlB,OAAA,CAAAE,SAAA;MAAAW,QAAA,gBACEb,OAAA;QAAIY,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAAC,iBAAe,EAACJ,QAAQ;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7DlB,OAAA,CAACN,QAAQ;QAAC0B,KAAK,EAAEd;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC9B;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACd,EAAA,CA9BID,QAAQ;EAAA,QACKP,WAAW,EACNC,WAAW,EAEZL,SAAS;AAAA;AAAA6B,EAAA,GAJ1BlB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
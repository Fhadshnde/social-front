{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blog-pro\\\\frontend\\\\src\\\\pages\\\\create-post\\\\CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./create-post.css\";\nimport { toast } from \"react-toastify\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createPost } from \"../../redux/apiCalls/postApiCall\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport { fetchCategories } from \"../../redux/apiCalls/categoryApiCall\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    isPostCreated\n  } = useSelector(state => state.post);\n  const {\n    categories\n  } = useSelector(state => state.category);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const formSubmitHandler = async e => {\n    e.preventDefault();\n    if (title.trim() === \"\") return toast.error(\"Post Title is required\");\n    if (category.trim() === \"\") return toast.error(\"Post Category is required\");\n    if (description.trim() === \"\") return toast.error(\"Post Description is required\");\n    if (!imageUrl) return toast.error(\"Post Image URL is required\"); // التأكد من وجود الـ URL للصورة\n\n    // إرسال بيانات المنشور إلى الخادم\n    const postData = {\n      title,\n      description,\n      category,\n      user: user._id,\n      imageUrl // تمرير رابط الصورة\n    };\n    dispatch(createPost(postData)); // إرسال البيانات\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isPostCreated) {\n      navigate(\"/\"); // الانتقال بعد نجاح الإنشاء\n    }\n  }, [isPostCreated, navigate]);\n  useEffect(() => {\n    dispatch(fetchCategories()); // جلب الفئات عند تحميل الصفحة\n  }, [dispatch]);\n\n  // إرسال الصورة إلى ImgBB\n  const uploadImage = async e => {\n    const formData = new FormData();\n    formData.append(\"image\", e.target.files[0]);\n    try {\n      const response = await axios.post(\"https://api.imgbb.com/1/upload?key=f10f6ddc95aa259fdea98c8ca863fed4\",\n      // API key هنا\n      formData);\n      const url = response.data.data.url;\n      setImageUrl(url); // تعيين رابط الصورة المستلمة\n    } catch (error) {\n      toast.error(\"Failed to upload image to ImgBB\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"create-post-title\",\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      className: \"create-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Post Title\",\n        className: \"create-post-input\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        className: \"create-post-input\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          children: \"Select A Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.title,\n          children: category.title\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"create-post-textarea\",\n        rows: \"5\",\n        placeholder: \"Post Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        className: \"create-post-upload\",\n        onChange: uploadImage,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"create-post-btn\",\n        children: loading ? /*#__PURE__*/_jsxDEV(RotatingLines, {\n          strokeColor: \"white\",\n          strokeWidth: \"5\",\n          animationDuration: \"0.75\",\n          width: \"40\",\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"xxo0wt0bizq+QJmrjaxiZfhFyBc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","useEffect","toast","useSelector","useDispatch","useNavigate","createPost","RotatingLines","fetchCategories","axios","jsxDEV","_jsxDEV","CreatePost","_s","dispatch","loading","isPostCreated","state","post","categories","category","user","auth","title","setTitle","description","setDescription","setCategory","file","setFile","imageUrl","setImageUrl","formSubmitHandler","e","preventDefault","trim","error","postData","_id","navigate","uploadImage","formData","FormData","append","target","files","response","url","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","required","disabled","map","rows","name","id","strokeColor","strokeWidth","animationDuration","width","visible","_c","$RefreshReg$"],"sources":["D:/Blog-pro/frontend/src/pages/create-post/CreatePost.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./create-post.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createPost } from \"../../redux/apiCalls/postApiCall\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport { fetchCategories } from \"../../redux/apiCalls/categoryApiCall\";\r\nimport axios from \"axios\";\r\n\r\nconst CreatePost = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, isPostCreated } = useSelector((state) => state.post);\r\n  const { categories } = useSelector((state) => state.category);\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (title.trim() === \"\") return toast.error(\"Post Title is required\");\r\n    if (category.trim() === \"\") return toast.error(\"Post Category is required\");\r\n    if (description.trim() === \"\")\r\n      return toast.error(\"Post Description is required\");\r\n    if (!imageUrl) return toast.error(\"Post Image URL is required\");  // التأكد من وجود الـ URL للصورة\r\n\r\n    // إرسال بيانات المنشور إلى الخادم\r\n    const postData = {\r\n      title,\r\n      description,\r\n      category,\r\n      user: user._id,\r\n      imageUrl,  // تمرير رابط الصورة\r\n    };\r\n\r\n    dispatch(createPost(postData)); // إرسال البيانات\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (isPostCreated) {\r\n      navigate(\"/\"); // الانتقال بعد نجاح الإنشاء\r\n    }\r\n  }, [isPostCreated, navigate]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories()); // جلب الفئات عند تحميل الصفحة\r\n  }, [dispatch]);\r\n\r\n  // إرسال الصورة إلى ImgBB\r\n  const uploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", e.target.files[0]);\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://api.imgbb.com/1/upload?key=f10f6ddc95aa259fdea98c8ca863fed4\",  // API key هنا\r\n        formData\r\n      );\r\n      const url = response.data.data.url;\r\n      setImageUrl(url);  // تعيين رابط الصورة المستلمة\r\n    } catch (error) {\r\n      toast.error(\"Failed to upload image to ImgBB\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"create-post\">\r\n      <h1 className=\"create-post-title\">Create New Post</h1>\r\n      <form onSubmit={formSubmitHandler} className=\"create-post-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Post Title\"\r\n          className=\"create-post-input\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <select\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          className=\"create-post-input\"\r\n          required\r\n        >\r\n          <option disabled value=\"\">\r\n            Select A Category\r\n          </option>\r\n          {categories.map((category) => (\r\n            <option key={category._id} value={category.title}>\r\n              {category.title}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <textarea\r\n          className=\"create-post-textarea\"\r\n          rows=\"5\"\r\n          placeholder=\"Post Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input\r\n          type=\"file\"\r\n          name=\"file\"\r\n          id=\"file\"\r\n          className=\"create-post-upload\"\r\n          onChange={uploadImage}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"create-post-btn\">\r\n          {loading ? (\r\n            <RotatingLines\r\n              strokeColor=\"white\"\r\n              strokeWidth=\"5\"\r\n              animationDuration=\"0.75\"\r\n              width=\"40\"\r\n              visible={true}\r\n            />\r\n          ) : (\r\n            \"Create\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
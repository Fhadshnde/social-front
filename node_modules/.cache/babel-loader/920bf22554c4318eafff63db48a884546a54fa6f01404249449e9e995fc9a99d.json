{"ast":null,"code":"import request from \"../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport { postActions } from \"../slices/postSlice\";\n\n// Fetch Posts Based On Page Number\nexport function fetchPosts(pageNumber) {\n  return async dispatch => {\n    try {\n      var _JSON$parse;\n      const token = (_JSON$parse = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n      const {\n        data\n      } = await request.get(`/api/posts?pageNumber=${pageNumber}`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setPosts(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Get Posts Count\nexport function getPostsCount() {\n  return async dispatch => {\n    try {\n      var _JSON$parse2;\n      const token = (_JSON$parse2 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.token;\n      const {\n        data\n      } = await request.get(`/api/posts/count`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setPostsCount(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Fetch Posts Based On Category\nexport function fetchPostsBasedOnCategory(category) {\n  return async dispatch => {\n    try {\n      var _JSON$parse3;\n      const token = (_JSON$parse3 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.token;\n      const {\n        data\n      } = await request.get(`/api/posts?category=${category}`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setPostsCate(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Create Post (without image)\nexport function createPost(newPost) {\n  return async dispatch => {\n    try {\n      var _JSON$parse4;\n      dispatch(postActions.setLoading());\n      const token = (_JSON$parse4 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.token;\n\n      // إرسال البيانات دون صورة\n      await request.post(`/api/posts`, newPost, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setIsPostCreated());\n      setTimeout(() => dispatch(postActions.clearIsPostCreated()), 2000); // 2s\n    } catch (error) {\n      toast.error(error.response.data.message);\n      dispatch(postActions.clearLoading());\n    }\n  };\n}\n\n// Fetch Single Post\nexport function fetchSinglePost(postId) {\n  return async dispatch => {\n    try {\n      var _JSON$parse5;\n      const token = (_JSON$parse5 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse5 === void 0 ? void 0 : _JSON$parse5.token;\n      const {\n        data\n      } = await request.get(`/api/posts/${postId}`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setPost(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Toggle Like Post\nexport function toggleLikePost(postId) {\n  return async dispatch => {\n    try {\n      var _JSON$parse6;\n      const token = (_JSON$parse6 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse6 === void 0 ? void 0 : _JSON$parse6.token;\n      const {\n        data\n      } = await request.put(`/api/posts/like/${postId}`, {}, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setLike(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Update Post (without image)\nexport function updatePost(newPost, postId) {\n  return async dispatch => {\n    try {\n      var _JSON$parse7;\n      const token = (_JSON$parse7 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse7 === void 0 ? void 0 : _JSON$parse7.token;\n      const {\n        data\n      } = await request.put(`/api/posts/${postId}`, newPost, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setPost(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Delete Post\nexport function deletePost(postId) {\n  return async dispatch => {\n    try {\n      var _JSON$parse8;\n      const token = (_JSON$parse8 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse8 === void 0 ? void 0 : _JSON$parse8.token;\n      const {\n        data\n      } = await request.delete(`/api/posts/${postId}`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.deletePost(data.postId));\n      toast.success(data.message);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Get All Posts\nexport function getAllPosts() {\n  return async dispatch => {\n    try {\n      var _JSON$parse9;\n      const token = (_JSON$parse9 = JSON.parse(localStorage.getItem(\"userInfo\"))) === null || _JSON$parse9 === void 0 ? void 0 : _JSON$parse9.token;\n      const {\n        data\n      } = await request.get(`/api/posts`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      dispatch(postActions.setPosts(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}","map":{"version":3,"names":["request","toast","postActions","fetchPosts","pageNumber","dispatch","_JSON$parse","token","JSON","parse","localStorage","getItem","data","get","headers","Authorization","setPosts","error","response","message","getPostsCount","_JSON$parse2","setPostsCount","fetchPostsBasedOnCategory","category","_JSON$parse3","setPostsCate","createPost","newPost","_JSON$parse4","setLoading","post","setIsPostCreated","setTimeout","clearIsPostCreated","clearLoading","fetchSinglePost","postId","_JSON$parse5","setPost","toggleLikePost","_JSON$parse6","put","setLike","updatePost","_JSON$parse7","deletePost","_JSON$parse8","delete","success","getAllPosts","_JSON$parse9"],"sources":["D:/Blog-pro/frontend/src/redux/apiCalls/postApiCall.js"],"sourcesContent":["import request from \"../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport { postActions } from \"../slices/postSlice\";\n\n// Fetch Posts Based On Page Number\nexport function fetchPosts(pageNumber) {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.get(`/api/posts?pageNumber=${pageNumber}`, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setPosts(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Get Posts Count\nexport function getPostsCount() {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.get(`/api/posts/count`, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setPostsCount(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Fetch Posts Based On Category\nexport function fetchPostsBasedOnCategory(category) {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.get(`/api/posts?category=${category}`, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setPostsCate(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Create Post (without image)\nexport function createPost(newPost) {\n  return async (dispatch) => {\n    try {\n      dispatch(postActions.setLoading());\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n\n      // إرسال البيانات دون صورة\n      await request.post(`/api/posts`, newPost, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n\n      dispatch(postActions.setIsPostCreated());\n      setTimeout(() => dispatch(postActions.clearIsPostCreated()), 2000); // 2s\n    } catch (error) {\n      toast.error(error.response.data.message);\n      dispatch(postActions.clearLoading());\n    }\n  };\n}\n\n// Fetch Single Post\nexport function fetchSinglePost(postId) {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.get(`/api/posts/${postId}`, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setPost(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Toggle Like Post\nexport function toggleLikePost(postId) {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.put(`/api/posts/like/${postId}`, {}, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setLike(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Update Post (without image)\nexport function updatePost(newPost, postId) {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.put(`/api/posts/${postId}`, newPost, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setPost(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Delete Post\nexport function deletePost(postId) {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.delete(`/api/posts/${postId}`, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.deletePost(data.postId));\n      toast.success(data.message);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Get All Posts\nexport function getAllPosts() {\n  return async (dispatch) => {\n    try {\n      const token = JSON.parse(localStorage.getItem(\"userInfo\"))?.token;\n      const { data } = await request.get(`/api/posts`, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      dispatch(postActions.setPosts(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}